properties([disableConcurrentBuilds()])

pipeline {
    agent any
    environment {
        DB_USER = credentials('db-user')
        DB_PASSWORD = credentials('db-password')
    }
    triggers {
        githubPush()
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Attractor-YouCan/YouCanProject.git'
            }
        }
        stage('Build') {
            steps {
                script {
                    // Остановить контейнеры перед сборкой
                    sh 'docker-compose down'
                    
                    // Собрать контейнеры с использованием переменных окружения
                    sh """
                    docker-compose build --build-arg DB_USER=${DB_USER} --build-arg DB_PASSWORD=${DB_PASSWORD}
                    """
                    
                    // Запустить контейнеры
                    sh "docker-compose up -d"
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    // Запустить тесты внутри контейнера
                    sh """
                    docker-compose run --rm web dotnet test /app/YouCan.Test/YouCan.Test.csproj
                    """
                }
            }
        }
        stage('Deploy') {
            when {
                expression {
                    currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                script {
                    // Развертывание на удаленном сервере
                    sh """
                    ssh -o StrictHostKeyChecking=no user@188.166.120.70 '
                        export DB_USER=${DB_USER}
                        export DB_PASSWORD=${DB_PASSWORD}
                        cd /var/lib/jenkins/workspace/YouCanN1
                        docker-compose down
                        docker-compose pull
                        docker-compose up -d
                    '
                    """
                }
            }
        }
    }
    post {
        always {
            echo 'Процесс завершен.'
            script {
                sh """
                docker-compose down
                """
            }
        }
        failure {
            echo 'Процесс завершился с ошибкой.'
        }
        success {
            echo 'Процесс завершился успешно.'
        }
    }
}