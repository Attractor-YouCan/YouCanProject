pipeline {
    agent any

    environment {
        DB_USER = credentials('dbUser')
        DB_PASSWORD = credentials('passwordDb')
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Attractor-YouCan/YouCanProject.git', branch: 'main'
            }
        }

        stage('Prepare Environment') {
            steps {
                script {
                    // Создаем файл с переменными окружения для Docker Compose
                    sh """
                        echo "DB_USER=${DB_USER}" > variables.env
                        echo "DB_PASSWORD=${DB_PASSWORD}" >> variables.env
                    """
                }
            }
        }

        stage('Update Configuration') {
            steps {
                script {
                    // Выполняем обновление appsettings.json
                    sh '''
                        echo "Updating appsettings.json files with environment variables"

                        # Убедимся, что переменные окружения установлены
                        if [ -z "$DB_USER" ] || [ -z "$DB_PASSWORD" ]; then
                          echo "Error: DB_USER and DB_PASSWORD must be set"
                          exit 1
                        fi

                        # Обновление всех appsettings.json файлов в проекте
                        find . -name "appsettings.json" -exec sed -i "s/\\\${DB_USER}/${DB_USER}/g" {} \\;
                        find . -name "appsettings.json" -exec sed -i "s/\\\${DB_PASSWORD}/${DB_PASSWORD}/g" {} \\;

                        echo "Update complete"
                    '''
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    sh 'docker-compose build'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    // Выполняем unit-тесты
                    sh 'dotnet test YouCan.Tests/YouCan.Tests.csproj --logger:trx'
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    sh 'docker-compose up -d'
                }
            }
        }
    }
    post {
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
        always {
            script {
                // Очищаем только неиспользуемые Docker образы и остановленные контейнеры
                sh 'docker image prune -f'
                sh 'docker container prune -f'
            }
        }
    }
}