pipeline {
    agent any
    triggers {
        githubPush()
    }
    environment {
        DB_USER = credentials('dbUser')
        DB_PASSWORD = credentials('passwordDb')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Attractor-YouCan/YouCanProject.git'
            }
        }
        stage('Prepare Environment') {
            steps {
                script {
                    sh """
                        echo "DB_USER=${DB_USER}" > variables.env
                        echo "DB_PASSWORD=${DB_PASSWORD}" >> variables.env
                    """
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    sh 'docker-compose down || true'
                    sh 'docker-compose build --no-cache'
                    sh 'docker-compose up -d'
                    sh 'docker-compose ps'
                    sh 'docker-compose logs web'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    sh '''
                    # Запуск тестов в контейнере, который содержит .NET SDK
                    docker-compose run --rm test
                    if [ $? -ne 0 ]; then
                        echo "Ошибка при выполнении тестов"
                        exit 1
                    fi
                    '''
                }
            }
        }
        stage('Deploy') {
            when {
                expression {
                    currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                script {
                    sh '''
                    ssh -o StrictHostKeyChecking=no user@188.166.120.70 '
                    cd /var/lib/jenkins/workspace/YouCanN1
                    docker-compose down
                    docker-compose pull
                    docker-compose up -d
                    docker exec web printenv
                    '
                    '''
                }
            }
        }
    }
    post {
        always {
            echo 'Процесс завершен.'
            script {
                sh 'docker-compose down'
            }
        }
        failure {
            echo 'Процесс завершился с ошибкой.'
        }
        success {
            echo 'Процесс завершился успешно.'
        }
    }
}

