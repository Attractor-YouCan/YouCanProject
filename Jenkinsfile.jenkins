properties([disableConcurrentBuilds()])

pipeline {
    agent any
    environment {
        DB_USER = credentials('dbUser')
        DB_PASSWORD = credentials('passwordDb')
    }
    triggers {
        githubPush()
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Attractor-YouCan/YouCanProject.git'
            }
        }
        stage('Build') {
            steps {
                script {
                    // Остановить контейнеры перед сборкой
                    sh 'docker-compose down'
                    // Собрать контейнеры с использованием переменных окружения
                    withCredentials([string(credentialsId: 'dbUser', variable: 'DB_USER'), 
                                     string(credentialsId: 'passwordDb', variable: 'DB_PASSWORD')]) {
                        sh """
                        docker-compose build
                        """
                    }
                    withCredentials([string(credentialsId: 'dbUser', variable: 'DB_USER'), 
                                     string(credentialsId: 'passwordDb', variable: 'DB_PASSWORD')]) {
                        sh """
                        docker-compose up -d
                        """
                    }
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    // Передача переменных в контейнер для запуска тестов
                    withCredentials([string(credentialsId: 'dbUser', variable: 'DB_USER'), 
                                     string(credentialsId: 'passwordDb', variable: 'DB_PASSWORD')]) {
                        sh """
                        docker-compose run --rm -e DB_USER=${DB_USER} -e DB_PASSWORD=${DB_PASSWORD} web dotnet test /app/YouCan.Test/YouCan.Test.csproj
                        """
                    }
                }
            }
        }
        stage('Deploy') {
            when {
                expression {
                    currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                script {
                    // Развертывание на удаленном сервере
                    withCredentials([string(credentialsId: 'dbUser', variable: 'DB_USER'), 
                                     string(credentialsId: 'passwordDb', variable: 'DB_PASSWORD')]) {
                        sh """
                        ssh -o StrictHostKeyChecking=no user@188.166.120.70 '
                        export DB_USER=${DB_USER}
                        export DB_PASSWORD=${DB_PASSWORD}
                        cd /var/lib/jenkins/workspace/YouCanN1
                        docker-compose down
                        docker-compose pull
                        docker-compose up -d
                        '
                        """
                    }
                    
                }
            }
        }
    }
    post {
        always {
            echo 'Процесс завершен.'
            script {
                sh """
                docker-compose down
                """
            }
        }
        failure {
            echo 'Процесс завершился с ошибкой.'
        }
        success {
            echo 'Процесс завершился успешно.'
        }
    }
}
