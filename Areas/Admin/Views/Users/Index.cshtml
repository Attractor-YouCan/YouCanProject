@using Microsoft.AspNetCore.Identity
@using YouCan.Entites.Models
@inject UserManager<User> manager;
@model List<User>

@{
    ViewData["Title"] = "Index";
    Layout = "_Admin";
}

<h1>Список пользователей</h1>

<p>
    <a asp-action="Create">Создать пользователя</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Имя
            </th>
            <th>
                Почта
            </th>
            <th>
                Роль
            </th>
            <th>
                Права доступа
            </th>
            <th>
                Тариф
            </th>
            <th>
                Дата окончания тарифа
            </th>
            <th>
                Смена тарифа
            </th>
            <th>
                Активный
            </th>
            <th>
                Уроки
            </th>
            <th>
                Пройдено
            </th>
            <th>
                Действия
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var user in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => user.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => user.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => user.Email)
            </td>
            <td>
                @foreach (var role in await manager.GetRolesAsync(user))
                {
                    <span>@role</span>
                }
            </td>
            <td>
                @if (User.Identity.IsAuthenticated)
                {
                    @if (!await manager.IsInRoleAsync(user, "admin") && User.IsInRole("admin"))
                    {
                        <form asp-action="ChangeRole" method="post">
                            <input type="hidden" name="Id" value="@user.Id"/>
                            <select name="role" class="form-select form-select-sm">
                                <option value=""></option>
                                @if (!await manager.IsInRoleAsync(user, "manager"))
                                {
                                        <option value="manager">manager</option>
                                }
                                else
                                {
                                    <option value="user">user</option>
                                }
                            </select>
                            <button type="submit" class="btn btn-outline-primary btn-sm mt-2">Поменять права</button>
                        </form>
                    }
                }
            </td>
                <td>
                    @if (user.Tariff != null)
                    {
                        @user.Tariff.Name
                    }
                </td>
                <td>
                    @if (user.TariffEndDate.HasValue)
                    {
                        @(((DateTime)user.TariffEndDate).ToLongDateString())
                    }
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated)
                    {
                        @if (!await manager.IsInRoleAsync(user, "admin"))
                        {
                            <form asp-action="ChangeTariff" method="post">
                                <input type="hidden" name="id" value="@user.Id" />
                                <select name="tariffId" class="form-select form-select-sm">
                                    <option value=""></option>
                                    @foreach (var tariff in (List<Tariff>)ViewBag.Tariffs)
                                    {
                                        @if (user.TariffId != tariff.Id)
                                        {
                                            <option value="@tariff.Id">@tariff.Name</option>
                                        }
                                    }
                                </select>
                                <button type="submit" class="btn btn-outline-primary btn-sm mt-2">Поменять тариф</button>
                            </form>
                        }
                    }
                </td>
                <td>
                    @if (user.LockoutEnabled && user.LockoutEnd != null)
                    {
                        <i class="bi bi-x text-danger fs-1"></i>
                    }
                    else
                    {
                        <i class="bi bi-check2 text-success fs-1"></i>
                    }
                </td>
                <td>
                    @user.Lessons.Count
                </td>
                <td>
                    @user.Lessons.Count(u => u.IsPassed == true)
                </td>
                <td>
                    @if (User.IsInRole("admin"))
                    {
                        <a class="btn btn-primary btn-sm m-1" asp-action="Edit" asp-route-id="@user.Id">Редактировать</a>
                        <a class="btn btn-warning btn-sm m-1" asp-action="Details" asp-route-id="@user.Id">Подробно</a>
                        @if (!await manager.IsInRoleAsync(user, "admin"))
                        {
                            <a class="btn btn-danger btn-sm m-1" asp-action="Delete" asp-route-id="@user.Id">Удалить</a>
                        }
                        @if (user.LockoutEnabled == true && user.LockoutEnd > DateTime.UtcNow)
                        {
                            <a class="btn btn-primary btn-sm m-1" asp-action="UnBlock" asp-route-id="@user.Id">Разблокировать</a>
                        }
                        else
                        {
                            <a class="btn btn-danger btn-sm m-1" asp-action="Block" asp-route-id="@user.Id">Заблокировать</a>
                        }
                    }
                </td>
        </tr>
}
    </tbody>
</table>
