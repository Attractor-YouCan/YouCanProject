@model YouCan.Areas.Admin.ViewModels.LessonModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/css/lesson-module.css" asp-append-version="true" />
<form asp-action="CreateLesson" asp-controller="Study" enctype="multipart/form-data">
    <div class="container content">
        <div class="creationPage">
            <label for="lessonLevel">Уровень Урока</label>
            <input asp-for="LessonLevel" type="number" class="form-control" value="@Model.LessonLevel" id="lessonLevel" disabled/>
            <input asp-for="Id" type="hidden" value="@Model.Id"/>
            <h1 class="mt-4">
                <label for="lessonTitle">Здесь будет: Тема Урока</label>
                <input asp-for="LessonTitle" type="text" class="form-control-lg" id="lessonTitle" placeholder="Введите Тему Урока"/>
            </h1>
            <p class="subtitle mt-3">
                <label for="lessonTitle2">Здесь будет: Подтема Урока</label>
                <textarea asp-for="LessonTitle2" class="form-control" id="lessonTitle2" placeholder="Введите Подтему Урока"  style="height: 50px"></textarea>
            </p>
            <div class="video-container embed-responsive embed-responsive-16by9 border border-primary rounded-3 mt-3">
                <video class="embed-responsive-item" controls>
                    <source src="~/lessonResources/lessonVideo.mp4" type="video/mp4" />
                    <source src="~/lessonResources/lessonVideo.ogg" type="video/ogg" />
                    Your browser does not support the video tag.
                </video>
                <h5 class="section-title">Здесь будет: Видеоматериал Урока</h5>
                <input type="file" class="mx-auto form-control my-3" name="lessonVideo" placeholder="Выберите видеоматериал урока" required/>
            </div>
            <h2 class="section-title">Здесь будет: Описание</h2>
            <p class="description">
                <textarea asp-for="Description" class="form-control" placeholder="Введите Описание Урока" id="floatingTextarea1" style="height: 200px"></textarea>
            </p>
            <h2 class="section-title">Здесь будет: Подробно о лекции</h2>
            <p class="lecture">
                <textarea asp-for="Lecture" class="form-control" placeholder="Введите Лекцию Урока" id="floatingTextarea2" style="height: 200px"></textarea>
            </p>
            <div class="col col-4 mx-auto mt-4">
                <button type="button" class="btn btn-success add-module-button rounded-3 w-100">Добавить Модуль к Уроку</button>
            </div>
            <div id="module-change-div" class="p-4 border border-light rounded-3 mt-3">
                <input type="hidden" asp-for="Modules" id="modulesObjs"/>
                @if (Model.Modules.Count == 0 || Model.Modules == null)
                {
                    <h5>Модулей к урокам еще нет!</h5>
                }
                else
                {
                    @for (int i = 0; i < Model.Modules.Count; i++)
                    {
                        var module = Model.Modules[i];
                        <div class="module border border-secondary rounded-3 mt-4 p-3" id="module-form-@i">
                            <h2 class="section-title">
                                <input value="@module.ModuleTitle" type="text" class="form-control" placeholder="Введите тему модуля" name="moduleTitle"/>
                            </h2>
                            <div class="formula-box mt-3">
                                <input value="@module.ModuleContent" class="form-control" type="text" placeholder="Введите контент модуля" name="moduleContent"/>
                                <div class="border border-primary rounded-3 mt-4 px-5">
                                    @if (module.ExistsPhotoUrl != null)
                                    {
                                        <img class="h-100" src="@Url.Content(module.ExistsPhotoUrl)"/>
                                    }
                                    <span class="mx-auto mt-3">Выбрать другое фото модуля</span>
                                    <input type="file" class="form-control mt-3" placeholder="Выберите фото модуля" name="modulePhoto" required/>
                                </div>
                            </div>
                            <button type="button" class="btn btn-light mt-4 ms-3 module-cancel-button">Отмена</button>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="creationPage" data-page="2" style="display: none;">
            <h5>Создание теста</h5>
        </div>
        
        <div class="text-center my-3" id="pagination-container">
            <button type="button" class="btn btn-secondary py-2 px-1 px-lg-4" id="prev-page" disabled>Previous</button>
            <span id="page-info"></span>
            <button type="button" class="btn btn-primary py-2 px-1 px-lg-4" id="next-page">Создать тест</button>
        </div>
    </div>
</form>



@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let moduleCounter = '@(Model.Modules.Count-1)';
            let moduleObjs = [];
            let currentPage = 1;
            const totalPages = document.querySelectorAll('.creationPage').length;
        
            function addModule() {
                moduleCounter++;
                const formId = `module-form-${moduleCounter}`;
        
                const resumeFormHtml = 
                    `<div class="module border border-secondary rounded-3 mt-4 p-3" id="${formId}">
                        <h2 class="section-title">
                            <input type="text" class="form-control" placeholder="Введите тему модуля" name="moduleTitle"/> 
                        </h2>
                        <div class="formula-box mt-3">
                            <input class="form-control" type="text" placeholder="Введите контент модуля" name="moduleContent"/>
                            <div class="border border-primary rounded-3 mt-4 px-5" style="height: 150px">
                                <span class="mx-auto mt-3">Здесь будет фотоматериал модуля</span>
                                <input type="file" class="form-control mt-3" placeholder="Выберите фото модуля" name="modulePhoto" required/>
                            </div>
                        </div>
                        <button type="button" class="btn btn-light mt-4 ms-3 module-cancel-button">Отмена</button>
                    </div>`;
        
                $('#module-change-div').append(resumeFormHtml);
        
            }
        
            function handleCancelButtonClick(event) {
                    if (event.target.classList.contains('module-cancel-button')) {
                        event.target.closest('.module').remove();
                    }
                }
                
            $('#module-change-div').on('click', '.module-cancel-button', handleCancelButtonClick);

            $('.add-module-button').click(function (){
                addModule();
            });
        
            function validatePage(page) {
                const inputs = document.querySelectorAll(`.creationPage:nth-of-type(${page}) input, .creationPage:nth-of-type(${page}) textarea`);
                let allFilled = true;
        
                inputs.forEach(input => {
                    if (input.type === 'text' || input.type === 'textarea') {
                        if (input.value.trim() === '') {
                            allFilled = false;
                        }
                    }
                });
        
                return allFilled;
            }
        
            function updatePaginationButtonState() {
                const isValid = validatePage(currentPage);
                document.getElementById('next-page').disabled = !isValid;
            }
        
            function showPage(page) {
                document.querySelectorAll('.creationPage').forEach((pageDiv, index) => {
                    pageDiv.style.display = (index + 1 === page) ? 'block' : 'none';
                });
                document.getElementById('prev-page').disabled = page === 1;
                document.getElementById('next-page').textContent = page === totalPages ? 'Finish' : 'Next';
                document.getElementById('page-info').textContent = `Page ${page} of ${totalPages}`;
                
                // Update button state based on validation
                updatePaginationButtonState();
            }
        
            document.getElementById('prev-page').addEventListener('click', function () {
                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                }
            });
        
            document.getElementById('next-page').addEventListener('click', function () {
                if (currentPage < totalPages) {
                    currentPage++;
                    showPage(currentPage);
                } else {
                    const formData = new FormData();
        
                    formData.append('Id', document.querySelector('input[name="Id"]').value);
                    formData.append('LessonLevel', document.querySelector('input[name="LessonLevel"]').value);
                    formData.append('LessonTitle', document.querySelector('input[name="LessonTitle"]').value);
                    formData.append('LessonTitle2', document.querySelector('textarea[name="LessonTitle2"]').value);
                    formData.append('Description', document.querySelector('textarea[name="Description"]').value);
                    formData.append('Lecture', document.querySelector('textarea[name="Lecture"]').value);
                    formData.append('LessonVideo', document.querySelector('input[name="lessonVideo"]').files[0]);
        
                    const moduleForms = document.querySelectorAll('.module');
                    moduleForms.forEach((form, index) => {
                        formData.append(`Modules[${index}].ModuleTitle`, form.querySelector('input[name="moduleTitle"]').value);
                        formData.append(`Modules[${index}].ModuleContent`, form.querySelector('input[name="moduleContent"]').value);
                        formData.append(`Modules[${index}].ModulePhoto`, form.querySelector('input[name="modulePhoto"]').files[0]);
                    });
        
                    axios.post('/Admin/Study/Edit', formData, {
                        headers: {
                            'Content-Type': 'multipart/form-data'
                        }
                    })
                    .then(function (response) {
                        console.log('Success:', response);
                    })
                    .catch(function (error) {
                        console.error('Error:', error);
                    });
                }
            });
        
            // Bind validation to input events on the current page
            document.addEventListener('input', updatePaginationButtonState);
        
            // Initial page display
            showPage(currentPage);
        });
    </script>
}


