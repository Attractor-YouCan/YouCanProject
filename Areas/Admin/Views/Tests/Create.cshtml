@model YouCan.Entities.Test

@{
ViewData["Title"] = "Create";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                <input type="hidden" value="@Model.SubjectId"/>
                <div class="form-group">
                    <label asp-for="GainingExperience" class="control-label"></label>
                    <input asp-for="GainingExperience" class="form-control" placeholder="Enter experience gained" />
                    <span asp-validation-for="GainingExperience" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="MinutesForTest" class="control-label"></label>
                    <input asp-for="MinutesForTest" type="number" class="form-control" placeholder="Enter time in minutes" />
                    <span asp-validation-for="MinutesForTest" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="LessonId" class="control-label"></label>
                    <select asp-for="LessonId" class="form-control" asp-items="ViewBag.LessonId">
                        <option value="">Select a lesson</option>
                    </select>
                    <span asp-validation-for="LessonId" class="text-danger"></span>
                </div>

                <div class="form-group text-center">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div class="text-center mt-3">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
