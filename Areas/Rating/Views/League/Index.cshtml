@using Microsoft.AspNetCore.Mvc.TagHelpers
@model List<League>

@{
ViewBag.Title = "Combined Rating Page";
Layout = "_NavBar";
}

<link rel="stylesheet" href="~/css/rating.css" asp-append-version="true" />
<link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>

<div class="container  rating-main">
    <!-- Header Section -->
    <div class="header">

        <div class="score-info">
            <div class="coin">
                <img src="/ratingimages/coin-bal.png" alt="coin" />
                <span>1024</span>
            </div>
            <div class="fire">
                <img src="/ratingimages/fire.png" alt="fire" />
                <span>7</span>
            </div>
        </div>
    </div>


    <main class="main">
        <div class="swiper swiper1 ">
            <div class="swiper-wrapper">
                @foreach (var league in Model)
                {
                    <div class="swiper-slide">
                        <img src="@Url.Content($"~/ratingimages/{league.LeagueName.Trim().ToLower()}.png")"
                             alt="@league.LeagueName" data-league="@league.LeagueName.Trim().ToLower()" />
                    </div>
                }
            </div>
        </div>
    </main>



   
    <div class="league-title">Бронзовая лига</div>

    
    <div class="leaderboard">
     
    </div>

    
    <div class="footer-button">
        <button class="floating-button">Где я?</button>
    </div>

</div>
@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    const leagueNames = {
        bronze: "Бронзовая лига",
        silver: "Серебряная лига",
        gold: "Золотая лига",
        platinum: "Платиновая лига",
        diamond: "Алмазная лига"
    };

    $(document).ready(function () {
        var debounceTimeout;

        function updateLeagueAndUsers() {
            clearTimeout(debounceTimeout);

            debounceTimeout = setTimeout(function () {
                var activeSlide = $('.swiper-slide.swiper-slide-active');
                var leagueName = activeSlide.find('img').data('league');

                $('.league-title').text(leagueNames[leagueName]);

                $.ajax({
                    url: '@Url.Action("GetUsersByLeague", "League")',
                    type: 'GET',
                    data: { leagueName: leagueName },
                    success: function (data) {
                        $(".loader").hide(); // Hide the loader

                        console.log("Received data:", data);

                        // Check if $values exists in the response
                        var users = data.$values;

                        if (Array.isArray(users)) {
                            var leaderboardHtml = '';
                            $.each(users, function (index, user) {
                                leaderboardHtml += `
                            <div class="row">
                                <div class="col-1 position">${index + 1}</div>
                                <div class="col-7 user-info">
                                    <img src="${user.avatarUrl}" alt="User" width="40" height="40" />
                                    <span>${user.fullName}</span>
                                </div>
                                <div class="col-2 score">${user.userLessonScore} очков</div>
                            </div>`;
                            });
                            $('.leaderboard').html(leaderboardHtml);
                        } else {
                            console.error("Unexpected data format received from server.");
                        }
                    },
                    error: function (xhr, status, error) {
                        $(".loader").hide(); // Hide the loader
                        console.error("An error occurred while fetching the users: ", error);
                    }
                });
            }, 300); // Adjust the debounce delay as needed
        }

        // Initialize Swiper
        var swiper = new Swiper(".swiper", {
            slidesPerView: 'auto',
            effect: "coverflow",
            grabCursor: true,
            centeredSlides: true,
            slideToClickedSlide: true,
            coverflowEffect: {
                rotate: 0,
                stretch: -10,
                depth: 150,
                modifier: 5,
                slideShadows: true
            },
            loop: true,
            on: {
                slideChange: function () {
                    updateLeagueAndUsers();
                }
            }
        });

        // Initial load
        updateLeagueAndUsers();
    });
</script>

