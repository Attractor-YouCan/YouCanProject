@using YouCan.Mvc;
@model User

@{
    ViewBag.Title = "title";
    Layout = "_NavBar";
}

<link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />


<div class="container">
    <h1 class="d-md-none text-center profile-title">Профиль</h1>
    <hr class="d-md-none">
    <div class="row row-cols-1 row-cols-lg-2">
        <div class="col">
            <div class="mt-md-5 mx-lg-0">
                <div class="d-flex flex-row justify-content-between mx-2 mx-lg-0 mb-5">
                    <div class="">
                        <p class="profile-text-primary">@Model.FullName</p>
                        <p class="profile-text-secondary">@Model.PhoneNumber</p>
                        <div class="d-flex flex-row align-items-center">
                            <img class="clock-img d-block" src="@Url.Content($"~/profileIcons/oclock.png")"></img>
                            <p class="profile-text-secondary ms-1">Регистрация -</p>
                        </div>
                    </div>
                    <div class="">
                        <img class="profile-img" src="@Url.Content($"~{Model.AvatarUrl}")" alt="avatar">
                    </div>
                </div>
            </div>
            <a asp-action="Edit" class="btn edit-profile-button d-inline-block p-0 d-flex flex-column justify-content-center">
                <div class="edit-profile-button-body d-flex flex-row align-items-center justify-content-between">
                    <img class="pencil-img" src="@Url.Content("/profileIcons/pencil.png")" alt="pencil">
                    <p class="m-0 font-weight-bold">Редактировать</p>
                    <img class="arrow-img" src="@Url.Content("/profileIcons/arrow.png")">
                </div>
            </a>
            <hr>
        </div>
    </div>

    @* Статистика *@
    <h2 class="mb-3 mt-4">Статистика</h2>
    <div class="row row-cols-2 row-cols-md-2 g-2">
        <div class="col">
            <div class="profile-stat-card d-flex align-items-center p-2 color-shock-mode">
                <img src="@Url.Content("/profileIcons/fire.png")" alt="fire-icon">
                <div class="ms-2">
                    <p class="stat-card-title mb-0">7</p>
                    <p class="stat-card-subtitle mb-0">Ударный режим</p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="profile-stat-card d-flex align-items-center p-2 color-experience">
                <img src="@Url.Content("/profileIcons/coin.png")" alt="experience-icon">
                <div class="ms-2">
                    <p class="stat-card-title mb-0">1024</p>
                    <p class="stat-card-subtitle mb-0">Очки опыта</p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="profile-stat-card d-flex align-items-center p-2 color-current-league">
                <img src="@Url.Content("/profileIcons/league.png")" alt="league-icon">
                <div class="ms-2">
                    <p class="stat-card-title mb-0">Золотая</p>
                    <p class="stat-card-subtitle mb-0">Текущая лига</p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="profile-stat-card d-flex align-items-center p-2 color-study-time">
                <img src="@Url.Content("/profileIcons/league.png")" alt="clock-icon">
                <div class="ms-2">
                    <p class="stat-card-title mb-0">3433</p>
                    <p class="stat-card-subtitle mb-0">Минуты за учебой</p>
                </div>
            </div>
        </div>
    </div>


    @* график *@
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <h2 class="mb-3 mt-4">Опыт за неделю</h2>
    
    <canvas class="chart" id="myStyledBarChart" width="700" height="200"></canvas>

    @* календарь *@
    <h2 class="mb-3 mt-4">Ударный режим</h2>
    <div class="calendar-container">
        <div class="calendar-header">
            <button class="prev-month">&lt;</button>
            <span class="month-year"></span>
            <button class="next-month">&gt;</button>
        </div>
        <table class="calendar">
            <thead>
                <tr>
                    <th>Пн</th>
                    <th>Вт</th>
                    <th>Ср</th>
                    <th>Чт</th>
                    <th>Пт</th>
                    <th>Сб</th>
                    <th>Вс</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>


    <div class="tariff-plan mt-4">
        <div class="tariff-card">
            <div class="icon">
                <img src="@Url.Content("/profileIcons/calendar.png")" alt="Calendar">
            </div>
            <div class="tariff-info">
                <h3>Тарифный план</h3>
                <p>Активно до: 16.07.2023 17:30</p>
                <button class="extend-btn">Продлить</button>
            </div>
        </div>
    </div>

    <div class="privacy-policy mt-4 mb-4">
        <button class="policy-btn">Политика конфиденциальности</button>
    </div>

    <script>
        let data = {
            labels: ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'],
            datasets: [{
                label: 'Опыт за неделю',
                data: [75, 100, 50, 25, 75, 50, 100],
                backgroundColor: [
                    'rgba(255, 165, 0, 0.7)', // оранжевый
                    'rgba(50, 205, 50, 0.7)',  // зеленый
                    'rgba(135, 206, 235, 0.7)', // голубой
                    'rgba(255, 69, 0, 0.7)',    // красный
                    'rgba(135, 206, 250, 0.7)', // светло-голубой
                    'rgba(135, 206, 250, 0.7)', // светло-голубой
                    'rgba(50, 205, 50, 0.7)'   // зеленый
                ],
                borderColor: [
                    'rgba(255, 165, 0, 1)',
                    'rgba(50, 205, 50, 1)',
                    'rgba(135, 206, 235, 1)',
                    'rgba(255, 69, 0, 1)',
                    'rgba(135, 206, 250, 1)',
                    'rgba(135, 206, 250, 1)',
                    'rgba(50, 205, 50, 1)'
                ],
                borderWidth: 2,
                borderRadius: 10,
                barPercentage: 0.5,
                categoryPercentage: 0.5,
                hoverBackgroundColor: 'rgba(255, 99, 132, 0.8)',
                hoverBorderColor: 'rgba(255, 99, 132, 1)'
            }]
        };

        let options = {
            responsive: false,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true,
                    max: 100,
                    ticks: {
                        stepSize: 25
                    }
                },
                x: {
                    grid: {
                        display: false
                    }
                }
            },
            plugins: {
                legend: {
                    display: false
                }
            }
        };

        let ctx = document.getElementById('myStyledBarChart').getContext('2d');

        let myStyledBarChart = new Chart(ctx, {
            type: 'bar',
            data: data,
            options: options
        });


        document.addEventListener('DOMContentLoaded', function () {
            const calendarContainer = document.querySelector('.calendar');
            const monthYearElement = document.querySelector('.month-year');
            const prevMonthButton = document.querySelector('.prev-month');
            const nextMonthButton = document.querySelector('.next-month');

            let currentDate = new Date();

            function renderCalendar(date) {
                const month = date.getMonth();
                const year = date.getFullYear();

                const monthName = date.toLocaleString('ru-RU', { month: 'long' });
                monthYearElement.textContent = monthName.charAt(0).toUpperCase() + monthName.slice(1);

                const firstDayOfMonth = new Date(year, month, 1).getDay();
                const daysInMonth = new Date(year, month + 1, 0).getDate();

                const daysInPreviousMonth = new Date(year, month, 0).getDate();

                calendarContainer.querySelector('tbody').innerHTML = '';
                let row = document.createElement('tr');

                // Fill in days from previous month if the month doesn't start on Monday
                for (let i = 1; i < (firstDayOfMonth === 0 ? 7 : firstDayOfMonth); i++) {
                    let cell = document.createElement('td');
                    cell.classList.add('inactive');
                    cell.textContent = daysInPreviousMonth - firstDayOfMonth + i + 1;
                    row.appendChild(cell);
                }

                // Fill in the days of the current month
                for (let day = 1; day <= daysInMonth; day++) {
                    if (row.children.length === 7) {
                        calendarContainer.querySelector('tbody').appendChild(row);
                        row = document.createElement('tr');
                    }
                    let cell = document.createElement('td');
                    cell.textContent = day;

                    // Highlight current day
                    if (day === date.getDate() && month === new Date().getMonth() && year === new Date().getFullYear()) {
                        cell.classList.add('active');
                    }

                    row.appendChild(cell);
                }

                // Fill in days from the next month if the last week is not full
                while (row.children.length < 7) {
                    let cell = document.createElement('td');
                    cell.classList.add('inactive');
                    cell.textContent = row.children.length + 1;
                    row.appendChild(cell);
                }

                calendarContainer.querySelector('tbody').appendChild(row);
            }

            prevMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() - 1);
                renderCalendar(currentDate);
            });

            nextMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() + 1);
                renderCalendar(currentDate);
            });

            renderCalendar(currentDate);
        });
    </script>

</div>
