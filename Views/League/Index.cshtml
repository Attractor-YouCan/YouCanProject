@{
    ViewBag.Title = "rating";
    Layout = "_NavBar";
}
<link rel="stylesheet" href="~/css/rating.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>


<div class="container">
    <div class="header">
        <div class="time-left">
            <img src="/ratingimages/timer.png" alt="time" />
            <span>123 дн. осталось</span>
        </div>
        <div class="score-info">
            <div class="coin">
                <img src="/ratingimages/coin-bal.png" alt="coin" />
                <span>1024</span>
            </div>
            <div class="fire">
                <img src="/ratingimages/fire.png" alt="fire" />
                <span>7</span>
            </div>
        </div>
    </div>
    @* <div class="league-header"> *@
    @*     <img src="/ratingimages/brone-liga.png" *@
    @*          alt="Bronze" *@
    @*          data-league="bronze" *@
    @*          class="small" /> *@
    @*     <img src="/ratingimages/silver-liga.png" *@
    @*          alt="Silver" *@
    @*          data-league="silver" *@
    @*          class="medium" /> *@
    @*     <img src="/ratingimages/gold-liga.png" *@
    @*          alt="Gold" *@
    @*          data-league="gold" *@
    @*          class="large" /> *@
    @*     <img src="/ratingimages/plat-liga.png" *@
    @*          alt="Platinum" *@
    @*          data-league="platinum" *@
    @*          class="medium" /> *@
    @*     <img src="/ratingimages/diamond-liga.png" *@
    @*          alt="Diamond" *@
    @*          data-league="diamond" *@
    @*          class="small" /> *@
    @* </div> *@
    <div class="swiper-container league-header">
        <div class="swiper-wrapper">
            <div class="swiper-slide">
                <img src="/ratingimages/brone-liga.png" alt="Bronze" data-league="bronze" class="small" />
            </div>
            <div class="swiper-slide">
                <img src="/ratingimages/silver-liga.png" alt="Silver" data-league="silver" class="medium" />
            </div>
            <div class="swiper-slide">
                <img src="/ratingimages/gold-liga.png" alt="Gold" data-league="gold" class="large" />
            </div>
            <div class="swiper-slide">
                <img src="/ratingimages/plat-liga.png" alt="Platinum" data-league="platinum" class="medium" />
            </div>
            <div class="swiper-slide">
                <img src="/ratingimages/diamond-liga.png" alt="Diamond" data-league="diamond" class="small" />
            </div>
        </div>
    </div>

    <div class="league-title">Золотая лига</div>
    <div class="leaderboard"></div>
    <div class="footer-button">
        <button class="floating-button">Где я?</button>
    </div>
</div>
@section Scripts {
    <script>
    const leagueData = {
        bronze: [
            { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" },
            { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" },
            { name: "Илон Маск", score: 16485, img: "/ratingimages/Mask.png" },
            { name: "Илон Маск", score: 14000, img: "/ratingimages/Mask.png" },
            { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" },
            { name: "Илон Маск", score: 20000, img: "/ratingimages/Mask.png" },
            // Добавьте другие данные для бронзовой лиги
        ],
        silver: [
            { name: "Джефф Безос", score: 17700, img: "/ratingimages/Mask.png" },
            { name: "Уоррен Баффет", score: 20000, img: "/ratingimages/Mask.png" },
            { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" },
            { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" },
            // Добавьте другие данные для серебряной лиги
        ],
        gold: [
            { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" },
            { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" },
            { name: "Уоррен Баффет", score: 17000, img: "/ratingimages/Mask.png" },
            { name: "Билл Гейтс", score: 18000, img: "/ratingimages/Mask.png" },
            // Добавьте другие данные для золотой лиги
        ],
        platinum: [
            { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" },
            { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" },
            { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" },
            { name: "Уоррен Баффет", score: 14000, img: "/ratingimages/Mask.png" },
            // Добавьте другие данные для платиновой лиги
        ],
        diamond: [
            { name: "Уоррен Баффет", score: 14000, img: "/ratingimages/Mask.png" },
            { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" },
            { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" },
            { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" },
            // Добавьте другие данные для бриллиантовой лиги
        ],
    };

    const leagueNames = {
        bronze: "Бронзовая лига",
        silver: "Серебряная лига",
        gold: "Золотая лига",
        platinum: "Платиновая лига",
        diamond: "Алмазная лига",
    };
    const swiper = new Swiper('.swiper-container', {
        slidesPerView: 5, // Adjust this based on how many icons you want visible
        centeredSlides: true,
        slideToClickedSlide: true,
        
        loop: true,
    });

    function updateLeaderboard(league) {
        const leaderboard = document.querySelector(".leaderboard");
        leaderboard.innerHTML = "";

        // Сортируем данные по очкам в порядке убывания
        const sortedData = [...leagueData[league]].sort(
            (a, b) => b.score - a.score
        );

        sortedData.forEach((item, index) => {
            const row = document.createElement("div");
            row.className = "row";

            let medalImg = "";
            if (index === 0) {
                medalImg = "/ratingimages/first.png"; // Золотая медаль
            } else if (index === 1) {
                medalImg = "/ratingimages/second.png"; // Серебряная медаль
            } else if (index === 2) {
                medalImg = "/ratingimages/third.png"; // Бронзовая медаль
            }

            // Пример добавления стрелок изменения
            let changeImg = "";
            let changeValue = "";
            let changeColor = ""; // Переменная для хранения цвета

            if (item.score > 16000) { // Условие для изменения стрелки
                changeImg = "/ratingimages/arrow-up.png"; // Зеленая стрелка вверх
                changeValue = (item.score - 16000); // Расчет изменения
                changeColor = "text-success"; // Зеленый цвет
            } else if (item.score < 15000) {
                changeImg = "/ratingimages/arrow-down.png"; // Красная стрелка вниз
                changeValue = (15000 - item.score); // Расчет изменения
                changeColor = "text-danger"; // Красный цвет
            }

            row.innerHTML = `
            <div class="col-1 position">
                ${medalImg
                ? `<img src="${medalImg}" alt="Medal" width="30" height="40" />`
                : index + 1}
            </div>
            <div class="col-7 user-info">
                <img src="${item.img}" alt="User" width="40" height="40" />
                <span>${item.name}</span>
            </div>
            <div class="col-2 score">
                ${item.score} очков
                <div class="change">
                    ${changeImg ? `<img class="changeImg" src="${changeImg}" alt="Change" />` : ''}
                    <span class="change-value ${changeColor}">${changeValue}</span>
                </div>
            </div>
        `;
            leaderboard.appendChild(row);
        });
    }

    function updateLeagueIcons(league) {
        // Highlight the selected league in Swiper
        swiper.slides.forEach(slide => {
            const img = slide.querySelector('img');
            img.classList.remove('centered', 'small', 'medium', 'large');
            if (img.dataset.league === league) {
                img.classList.add('centered', 'large');
            } else {
                img.classList.add(img.dataset.league === league ? 'large' : 'medium');
            }
        });

        // Update leaderboard and title
        updateLeaderboard(league);
        document.querySelector('.league-title').textContent = leagueNames[league];
    }
    swiper.on('slideChange', function () {
        const activeSlide = swiper.slides[swiper.activeIndex];
        const activeLeague = activeSlide.querySelector('img').dataset.league;
        updateLeagueIcons(activeLeague);
    });

    document.querySelectorAll(".league-header img").forEach((img) => {
        img.addEventListener("click", () => {
            const league = img.dataset.league;
            updateLeagueIcons(league);
        });
    });

    document.querySelector('.footer-button button').addEventListener('click', () => {
        const username = 'Тим Кук'; // Имя пользователя, который должен быть найден
        const leaderboard = document.querySelector('.leaderboard');
        const rows = Array.from(leaderboard.querySelectorAll('.row'));

        const existingHighlight = leaderboard.querySelector('.highlight');
        if (existingHighlight) {
            existingHighlight.remove();
        }
        // Найти строку пользователя
        const userRow = rows.find(row => row.querySelector('.user-info span').textContent === username);

        if (userRow) {
            // Создать дубликат строки
            const highlightedRow = userRow.cloneNode(true);
            highlightedRow.classList.add('highlight');

            // Вставить дубликат строки перед первым элементом списка
            leaderboard.insertBefore(highlightedRow, leaderboard.firstChild);

            // Прокрутка к верхней части страницы для отображения выделенной строки
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        } else {
            alert('Пользователь не найден');
        }
    });


    // Инициализируем первую лигу как выбранную по умолчанию
    updateLeagueIcons("diamond");
</script>
    @* <script> *@
    @*     const leagueData = { *@
    @*         bronze: [ *@
    @*             { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Илон Маск", score: 16485, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Илон Маск", score: 14000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Илон Маск", score: 20000, img: "/ratingimages/Mask.png" }, *@
    @*             // Добавьте другие данные для бронзовой лиги *@
    @*         ], *@
    @*         silver: [ *@
    @*             { name: "Джефф Безос", score: 17700, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Уоррен Баффет", score: 20000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" }, *@
    @*             // Добавьте другие данные для серебряной лиги *@
    @*         ], *@
    @*         gold: [ *@
    @*             { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Уоррен Баффет", score: 17000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Билл Гейтс", score: 18000, img: "/ratingimages/Mask.png" }, *@
    @*             // Добавьте другие данные для золотой лиги *@
    @*         ], *@
    @*         platinum: [ *@
    @*             { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Уоррен Баффет", score: 14000, img: "/ratingimages/Mask.png" }, *@
    @*             // Добавьте другие данные для платиновой лиги *@
    @*         ], *@
    @*         diamond: [ *@
    @*             { name: "Уоррен Баффет", score: 14000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Билл Гейтс", score: 15000, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Тим Кук", score: 16485, img: "/ratingimages/Mask.png" }, *@
    @*             { name: "Джефф Безос", score: 15700, img: "/ratingimages/Mask.png" }, *@
    @*             // Добавьте другие данные для бриллиантовой лиги *@
    @*         ], *@
    @*     }; *@
    @* *@
    @*     const leagueNames = { *@
    @*         bronze: "Бронзовая лига", *@
    @*         silver: "Серебряная лига", *@
    @*         gold: "Золотая лига", *@
    @*         platinum: "Платиновая лига", *@
    @*         diamond: "Алмазная лига", *@
    @*     }; *@
    @*      *@
    @* *@
    @*     function updateLeaderboard(league) { *@
    @*         const leaderboard = document.querySelector(".leaderboard"); *@
    @*         leaderboard.innerHTML = ""; *@
    @* *@
    @*         // Сортируем данные по очкам в порядке убывания *@
    @*         const sortedData = [...leagueData[league]].sort( *@
    @*             (a, b) => b.score - a.score *@
    @*         ); *@
    @* *@
    @*         sortedData.forEach((item, index) => { *@
    @*             const row = document.createElement("div"); *@
    @*             row.className = "row"; *@
    @* *@
    @*             let medalImg = ""; *@
    @*             if (index === 0) { *@
    @*                 medalImg = "/ratingimages/first.png"; // Золотая медаль *@
    @*             } else if (index === 1) { *@
    @*                 medalImg = "/ratingimages/second.png"; // Серебряная медаль *@
    @*             } else if (index === 2) { *@
    @*                 medalImg = "/ratingimages/third.png"; // Бронзовая медаль *@
    @*             } *@
    @* *@
    @*             // Пример добавления стрелок изменения *@
    @*             let changeImg = ""; *@
    @*             let changeValue = ""; *@
    @*             let changeColor = ""; // Переменная для хранения цвета *@
    @* *@
    @*             if (item.score > 16000) { // Условие для изменения стрелки *@
    @*                 changeImg = "/ratingimages/arrow-up.png"; // Зеленая стрелка вверх *@
    @*                 changeValue = (item.score - 16000); // Расчет изменения *@
    @*                 changeColor = "text-success"; // Зеленый цвет *@
    @*             } else if (item.score < 15000) { *@
    @*                 changeImg = "/ratingimages/arrow-down.png"; // Красная стрелка вниз *@
    @*                 changeValue = (15000 - item.score); // Расчет изменения *@
    @*                 changeColor = "text-danger"; // Красный цвет *@
    @*             } *@
    @* *@
    @*             row.innerHTML = ` *@
    @*         <div class="col-1 position"> *@
    @*             ${medalImg *@
    @*                     ? `<img src="${medalImg}" alt="Medal" width="30" height="40" />` *@
    @*                     : index + 1} *@
    @*         </div> *@
    @*         <div class="col-7 user-info"> *@
    @*             <img src="${item.img}" alt="User" width="40" height="40" /> *@
    @*             <span>${item.name}</span> *@
    @*         </div> *@
    @*         <div class="col-2 score"> *@
    @*             ${item.score} очков *@
    @*             <div class="change"> *@
    @*                 ${changeImg ? `<img class="changeImg" src="${changeImg}" alt="Change" />` : ''} *@
    @*                 <span class="change-value ${changeColor}">${changeValue}</span> *@
    @*             </div> *@
    @*         </div> *@
    @*     `; *@
    @*             leaderboard.appendChild(row); *@
    @*         }); *@
    @*     } *@
    @* *@
    @*     function updateLeagueIcons(selectedLeague) { *@
    @*         const leagueIcons = document.querySelectorAll(".league-header img"); *@
    @*         const centerIndex = Math.floor(leagueIcons.length / 2); *@
    @* *@
    @*         leagueIcons.forEach((img) => img.classList.remove("centered")); *@
    @* *@
    @*         const selectedImg = document.querySelector( *@
    @*             `.league-header img[data-league="${selectedLeague}"]` *@
    @*         ); *@
    @*         const selectedIndex = Array.from(leagueIcons).indexOf(selectedImg); *@
    @* *@
    @*         const shift = centerIndex - selectedIndex; *@
    @*         leagueIcons.forEach((img, index) => { *@
    @*             let newIndex = *@
    @*                 (index + shift + leagueIcons.length) % leagueIcons.length; *@
    @*             img.style.order = newIndex; *@
    @* *@
    @*             // Сброс размера всех иконок *@
    @*             img.classList.remove("small", "medium", "large"); *@
    @* *@
    @*             // Присвоение размеров в зависимости от позиции *@
    @*             if (newIndex === centerIndex) { *@
    @*                 img.classList.add("large"); *@
    @*             } else if ( *@
    @*                 newIndex === centerIndex - 1 || *@
    @*                 newIndex === centerIndex + 1 *@
    @*             ) { *@
    @*                 img.classList.add("medium"); *@
    @*             } else { *@
    @*                 img.classList.add("small"); *@
    @*             } *@
    @*         }); *@
    @* *@
    @*         selectedImg.classList.add("centered"); *@
    @*         updateLeaderboard(selectedLeague); *@
    @* *@
    @*         // Обновление названия лиги *@
    @*         document.querySelector(".league-title").textContent = *@
    @*             leagueNames[selectedLeague]; *@
    @*     } *@
    @* *@
    @*     document.querySelectorAll(".league-header img").forEach((img) => { *@
    @*         img.addEventListener("click", () => { *@
    @*             const league = img.dataset.league; *@
    @*             updateLeagueIcons(league); *@
    @*         }); *@
    @*     }); *@
    @* *@
    @*     document.querySelector('.footer-button button').addEventListener('click', () => { *@
    @*         const username = 'Тим Кук'; // Имя пользователя, который должен быть найден *@
    @*         const leaderboard = document.querySelector('.leaderboard'); *@
    @*         const rows = Array.from(leaderboard.querySelectorAll('.row')); *@
    @* *@
    @*         const existingHighlight = leaderboard.querySelector('.highlight'); *@
    @*         if (existingHighlight) { *@
    @*             existingHighlight.remove(); *@
    @*         } *@
    @*         // Найти строку пользователя *@
    @*         const userRow = rows.find(row => row.querySelector('.user-info span').textContent === username); *@
    @* *@
    @*         if (userRow) { *@
    @*             // Создать дубликат строки *@
    @*             const highlightedRow = userRow.cloneNode(true); *@
    @*             highlightedRow.classList.add('highlight'); *@
    @* *@
    @*             // Вставить дубликат строки перед первым элементом списка *@
    @*             leaderboard.insertBefore(highlightedRow, leaderboard.firstChild); *@
    @* *@
    @*             // Прокрутка к верхней части страницы для отображения выделенной строки *@
    @*             window.scrollTo({ *@
    @*                 top: 0, *@
    @*                 behavior: 'smooth' *@
    @*             }); *@
    @*         } else { *@
    @*             alert('Пользователь не найден'); *@
    @*         } *@
    @*     }); *@
    @* *@
    @* *@
    @*     // Инициализируем первую лигу как выбранную по умолчанию *@
    @*     updateLeagueIcons("diamond"); *@
    @* </script> *@
}
