version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    ports:
      - "5001:80"
    env_file:
      - variables.env  # Используем файл переменных окружения
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - data-protection-keys:/root/.aspnet/DataProtection-Keys
    networks:
      - webnet
    environment:
      # Добавляем эти переменные для явного задания среды
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

  db:
    image: postgres:13
    container_name: postgresDb
    env_file:
      - variables.env  # Используем файл переменных окружения
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: YouCan
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: mynginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "90:80"
    depends_on:
      web:
        condition: service_started
    networks:
      - webnet

volumes:
  pgdata:
    driver: local
  data-protection-keys:
    driver: local

networks:
  webnet:
    driver: bridge
